@page "/Admin/ThongKeDonHang"
@layout AdminLayout
@inject HttpClient Http
@inject IBlazorDownloadFileService DownloadFileService
@using BlazorDownloadFile
@using SanGiaoDich_BrotherHood.Shared.Models

<h3 class="text-center mb-4">Thống kê đơn hàng</h3>

<!-- Nút xuất Excel -->
<div class="d-flex justify-content-center mt-4 mb-5">
    <button class="btn btn-success" @onclick="ExportToExcel">Xuất Excel</button>
</div>

<div class="container d-flex justify-content-center align-items-center min-vh-100">
    @if (statistics == null)
    {
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    else
    {
        <div class="row w-100 justify-content-center">
            <!-- Card: Tổng số đơn hàng -->
            <div class="col-12 col-md-4 mb-4 d-flex justify-content-center">
                <div class="card text-white bg-primary w-100 shadow-lg rounded-lg">
                    <div class="card-body text-center">
                        <i class="fas fa-box-open fa-3x mb-3"></i>
                        <h5 class="card-title">Tổng số đơn hàng</h5>
                        <p class="card-text fs-2 fw-bold">@statistics.TotalOrders</p>
                    </div>
                </div>
            </div>

            <!-- Card: Đã hủy -->
            <div class="col-12 col-md-4 mb-4 d-flex justify-content-center">
                <div class="card text-white bg-danger w-100 shadow-lg rounded-lg">
                    <div class="card-body text-center">
                        <i class="fas fa-times-circle fa-3x mb-3"></i>
                        <h5 class="card-title">Đã hủy</h5>
                        <p class="card-text fs-2 fw-bold">@statistics.CanceledOrders</p>
                    </div>
                </div>
            </div>

            <!-- Card: Đã duyệt -->
            <div class="col-12 col-md-4 mb-4 d-flex justify-content-center">
                <div class="card text-white bg-success w-100 shadow-lg rounded-lg">
                    <div class="card-body text-center">
                        <i class="fas fa-check-circle fa-3x mb-3"></i>
                        <h5 class="card-title">Đã duyệt</h5>
                        <p class="card-text fs-2 fw-bold">@statistics.CompletedOrders</p>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private BillStatistics statistics;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            statistics = await Http.GetFromJsonAsync<BillStatistics>("api/Bill/statistics");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Lỗi khi tải thống kê đơn hàng: {ex.Message}");
        }
    }

    private async Task ExportToExcel()
    {
        var response = await Http.GetAsync("api/Bill/ExportOrderStatisticsExcel");
        if (response.IsSuccessStatusCode)
        {
            var fileBytes = await response.Content.ReadAsByteArrayAsync();
            var fileName = "OrderStatistics.xlsx";

            await DownloadFileService.DownloadFile(fileName, fileBytes, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");

            Console.WriteLine("Tải file Excel thành công.");
        }
        else
        {
            Console.WriteLine("Lỗi khi tải file Excel");
        }
    }

    public class BillStatistics
    {
        public int TotalOrders { get; set; }
        public int CompletedOrders { get; set; }
        public int CanceledOrders { get; set; }
    }
}

<style>
    .card-hover {
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

    .card-body {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

        .card-body i {
            transition: transform 0.2s ease;
        }

        .card-body:hover i {
            transform: scale(1.1);
        }

        .card-body h5 {
            font-size: 1.4rem;
            font-weight: 600;
        }

        .card-body p {
            font-size: 2rem;
            font-weight: 700;
        }

    .card {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 25px;
        margin-bottom: 15px;
    }

    .card-header {
        font-size: 1.2rem;
    }

    .card-title {
        font-size: 1.6rem;
        font-weight: bold;
    }

    /* Màu sắc cho các trạng thái */
    .bg-primary {
        background-color: #007bff !important;
    }

    .bg-danger {
        background-color: #dc3545 !important;
    }

    .bg-success {
        background-color: #28a745 !important;
    }

    /* Cải thiện margin và padding */
    .container {
        margin-top: -20%;
    }

    .spinner-border {
        margin: 20px;
    }

    h3 {
        margin-bottom: 30px;
    }

    /* Điều chỉnh thêm khoảng cách cho nút */
    .btn-success {
        font-size: 1.1rem;
        padding: 10px 20px;
    }

</style>
