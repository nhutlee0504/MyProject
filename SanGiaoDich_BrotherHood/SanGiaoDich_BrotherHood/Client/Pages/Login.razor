@page "/login"
@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<style>
    .content {
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        padding: 20px;
    }

    .input-group-text {
        background-color: white;
        color: green;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    .form-control {
        background-color: white;
        border-top-right-radius: 10px;
        border-bottom-right-radius: 10px;
    }

    .validation-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: flex;
        align-items: center;
    }

        .validation-message::before {
            content: "\f06a";
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            margin-right: 0.5rem;
            color: #dc3545;
        }

    .alert {
        border-radius: 0.5rem;
        padding: 1rem;
        font-size: 1rem;
        margin-bottom: 1rem;
    }

    .alert-danger {
        background-color: #dc3545;
        color: #ffffff;
    }

    .alert-success {
        background-color: #28a745;
        color: #ffffff;
    }

    .btn-google, .btn-facebook {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-google img, .btn-facebook img {
            width: 20px;
            height: 20px;
        }

    .btn-google {
        background-color: white;
        border-color: white;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ */
        transition: box-shadow 0.3s ease-in-out; /* Hiệu ứng chuyển tiếp khi hover */
    }

        .btn-google:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Đổ bóng khi hover */
        }


    .btn-facebook {
        background-color: #1877F2;
        color: white;
    }

    .btn-success {
        background-color: #34C759;
    }

    .form-container {
        max-width: 400px;
        margin: 0 auto;
        padding: 2rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 0.75rem;
        background-color: white;
    }

        .form-container h2, .form-container .mb-3, .form-container .text-center {
            margin-bottom: 1rem;
        }

        .form-container button {
            height: 40px;
        }

    a {
        text-decoration: underline;
        color: #007bff;
    }

    .form-label {
        font-size: 1.2rem;
        font-weight: bold;
        color: green;
        position: relative;
        padding-bottom: 5px;
        transition: all 0.3s ease;
    }

        .form-label:hover {
            color: #28a745;
            cursor: pointer;
            transform: translateY(-3px);
        }

        .form-label::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: #28a745;
            transform: scaleX(0);
            transform-origin: bottom right;
            transition: transform 0.3s ease-out;
        }

        .form-label:hover::after {
            transform: scaleX(1);
            transform-origin: bottom left;
            background-color: #28a745;
        }
    /* Giảm margin-top của card */
    .card {
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    /* Giảm margin-top trong card-body */
    .card-body {
        padding: 30px;
        margin-top: 10px; /* Giảm margin-top */
    }

</style>
<link href="/css/Login.css" rel="stylesheet"/>
<div class="container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="bi bi-house"></i> Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="#">Đăng nhập</a></li>
    </ul>
</div>
<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-1"></div>
        <div class="col-md-10 col-12">
            <div class="card mb-3">
                <div class="row g-0 align-items-center">
                    <!-- Hình ảnh -->
                    <div class="col-md-6 col-12 order-1 justify-content-center d-flex">
                        <img src="/AnhGiaoDien/z5820586883713_6606cb514fbc06e7ea06515f9003b130.jpg"
                             class="img-fluid img-login"
                             alt="Logo">
                    </div>

                    <!-- Form đăng nhập -->
                    <div class="col-md-6 order-md-2 order-2">
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(SuccessMessage))
                            {
                                <div class="alert alert-success" role="alert">
                                    @SuccessMessage
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(ErrorMessage))
                            {
                                <div class="alert alert-danger" role="alert">
                                    @ErrorMessage
                                </div>
                            }
                            <h3 class="text-success text-center mb-4" style="font-weight: bolder;">Đăng nhập</h3>
                            <EditForm Model="@this" OnValidSubmit="HandleLogin">
                                <DataAnnotationsValidator />
                                <div class="mb-3">
                                    <label for="UserName" class="form-label">Tên tài khoản</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                                        <InputText id="UserName" class="form-control rounded-start"
                                                   @bind-Value="UserName"
                                                   placeholder="Nhập tên tài khoản" />
                                    </div>
                                    <ValidationMessage For="@(() => UserName)" />
                                </div>
                                <div class="mb-3">
                                    <label for="Password" class="form-label">Mật khẩu</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                        <InputText id="Password" type="password"
                                                   class="form-control rounded-start"
                                                   @bind-Value="Password"
                                                   placeholder="Nhập mật khẩu" />
                                    </div>
                                    <ValidationMessage For="@(() => Password)" />
                                </div>
                                <button type="submit" class="btn btn-success btn-block w-100 rounded-start">Đăng nhập</button>
                                <div class="text-right mt-3">
                                    <a href="forgotPass" class="text-primary">Quên mật khẩu?</a>
                                </div>
                                <div class="text-center mt-3">
                                    Bạn chưa có tài khoản?
                                    <a class="text-primary" href="Register">Đăng ký tài khoản</a>
                                </div>
                            </EditForm>
                        </div>
                        <div class="mt-1 text-center mb-4">
                            <strong>Hoặc đăng nhập bằng</strong>
                            <div class="mt-3">
                                <a @onclick="LoginWithGoogle" class="btn  btn-google mx-auto rounded-pill" style="max-width: 400px;">
                                    <img src="https://developers.google.com/identity/images/g-logo.png"
                                         alt="Google logo" class="me-2" style="height: 20px;" />
                                    Đăng nhập với Google
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-1"></div>
    </div>
</div>


@code {
    [Required(ErrorMessage = "Vui lòng nhập tên tài khoản")]
    public string UserName { get; set; }
    [Required(ErrorMessage = "Vui lòng nhập mật khẩu")]
    public string Password { get; set; }
    private string ErrorMessage { get; set; }
    private string SuccessMessage { get; set; }
    private string Token { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.Uri;
        if (uri.Contains("token"))
        {
            var uriToken = new Uri(uri).Query;
            Token = Uri.UnescapeDataString(uriToken.Replace("?token=", ""));


            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "token", Token);
            HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Token);
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
        else
        {
            Token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "token");
            if (!string.IsNullOrEmpty(Token))
            {
                HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Token);
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
        }
    }

    private async Task HandleLogin()
    {
        var loginDto = new { UserName, Password };

        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/user/LoginUser", loginDto);

            if (response.IsSuccessStatusCode)
            {
                Token = await response.Content.ReadAsStringAsync();
                SuccessMessage = "Đăng nhập thành công!";
                ErrorMessage = null;
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "token", Token);
                HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Token);
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                ErrorMessage = errorMessage;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "Có lỗi xảy ra: " + ex.Message;
        }
    }

    private async Task LoginWithGoogle()
    {
        var googleAuthUrl = "https://localhost:5001/api/user/signin-google";
        NavigationManager.NavigateTo(googleAuthUrl, true);
    }

    private async Task LoginWithFacebook()
    {
        var facebookAuthUrl = "https://localhost:44359/api/user/signin-facebook";
        NavigationManager.NavigateTo(facebookAuthUrl, true);
    }


    private async Task ClearErrorMessageAfterDelay()
    {
        await Task.Delay(3000);
        ErrorMessage = null;
        StateHasChanged();
    }
}
